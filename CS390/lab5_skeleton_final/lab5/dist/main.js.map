{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/movie-list/movie-list.component.css","webpack:///./src/app/home/movie-list/movie-list.component.html","webpack:///./src/app/home/movie-list/movie-list.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/shared/models/movie.interface.ts","webpack:///./src/app/shared/movie-util.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./movie/movie.module\": [\n\t\t\"./src/app/movie/movie.module.ts\",\n\t\t\"movie-movie-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nconst routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full'},\n  { path: 'movie', loadChildren: './movie/movie.module#MovieModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<cs390wap-nav-bar></cs390wap-nav-bar>\\n<router-outlet></router-outlet>\\n<!--Code gets inserted here after routing-->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cs390wap-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { HomeModule } from './home/home.module';\nimport { SharedModule } from './shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    HomeModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"text-center\\\">\\n    <h2 class=\\\"display-4\\\">Welcome, {{ user.name }}</h2>\\n    <h3 class=\\\"display-4\\\">Select a title to begin</h3>\\n  </div>\\n  <!-- Movie list should be displayed here -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cs390wap-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  user = {\n    name: 'Mary'\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MovieListComponent } from './movie-list/movie-list.component';\nimport { HomeComponent } from './home.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    HomeComponent,\n    MovieListComponent,\n  ]\n})\nexport class HomeModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <!-- You need to extract this code here to a different component -->\\n    <div *ngFor=\\\"let movie of movies\\\" class=\\\"card movie-card\\\" [routerLink]=\\\"['movie', 'detail', movie.id]\\\">\\n      <img class=\\\"card-img-top\\\" [src]=\\\"movie.image ? movie.image : '/assets/default.png'\\\" alt=\\\"Card image cap\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{movie.title}} <span class=\\\"fa fa-edit\\\" [routerLink]=\\\"['movie', 'edit', movie.id]\\\"></span></h5>\\n        <p class=\\\"card-text\\\">Status: {{movie.productionStatus}}</p>\\n      </div>\\n    </div>\\n    <!----------------------------------------------------------------->\\n    <button [routerLink]=\\\"['movie', 'new']\\\" class=\\\"btn btn-lg btn-primary btn-fab btn-circle float-right\\\">+</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Movie } from '../../shared/models/movie.interface';\n\n@Component({\n  selector: 'cs390wap-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.css']\n})\nexport class MovieListComponent implements OnInit {\n  movies: Movie[];\n  constructor() {\n    this.movies = [];\n  }\n  \n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">\\n      Movie Manager\\n    </a>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MovieUtilService } from '../shared/movie-util.service';\n\n@Component({\n  selector: 'cs390wap-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  constructor(private movieService: MovieUtilService) {\n   }\n   getList() {\n     return this.movieService.getMovies();\n   }\n\n  ngOnInit() {\n  }\n\n}\n","export enum PRODUCTION_STATUS {\r\n  POST_PRODUCTION = \"Post-Production\",\r\n  PRE_PRODUCTION = \"Pre-Production\",\r\n  SCREENPLAY_FINISHED = \"Screenplay finished\",\r\n  FILMING = \"Filming\",\r\n  COMPLETED = \"Completed\",\r\n  RELEASED = \"Released\",\r\n  PITCH = \"Pitch\"\r\n}\r\nexport interface Movie {\r\n  title: string;\r\n  productionStatus: PRODUCTION_STATUS;\r\n  genre: string;\r\n  director?: string;\r\n  screenwriters?: string[];\r\n  logline?: string;\r\n  id: number;\r\n  image?: string;\r\n  tags: string[];\r\n}","import { Injectable } from '@angular/core';\nimport { Movie, PRODUCTION_STATUS } from './models/movie.interface';\nimport { SharedModule } from './shared.module';\n\n@Injectable({\n  providedIn: SharedModule\n})\nexport class MovieUtilService {\n  private movies: Movie[] = [\n    { \n      title: 'Uncharted',\n      productionStatus: PRODUCTION_STATUS.PRE_PRODUCTION,\n      genre: 'Action',\n      logline: 'Plot is unknown at this time',\n      tags: ['Action', 'Adventure'],\n      id: 0\n    },\n    {\n      title: 'Son of Jeru',\n      productionStatus: PRODUCTION_STATUS.SCREENPLAY_FINISHED,\n      genre: 'Action',\n      director: 'Maneesh Tewani',\n      screenwriters: [ 'Maneesh Tewani' ],\n      logline: 'Unable to stop the world from ending, young Nelson unravels the troubled path to finding his parents again.',\n      tags: [ 'Action', 'Drama' ],\n      id: 1\n    }\n  ];\n  constructor() { }\n  /*\n    Accepts: id as a number\n    Returns: movie at an index\n  */\n  getMovie(id: number): Movie { return undefined; }\n  /*\n    Accepts: movie as a Movie type\n    Returns: void, updates movie at id with passed in movie\n  */\n  update(movie: Movie) {}\n  getProductionStatuses(): string[] {\n    return Object.values(PRODUCTION_STATUS);\n  }\n  /*\n    Accepts: movie as a Movie type\n    Returns: void, adds movie to the end of movies array\n  */\n  addMovie(movie: Movie) { }\n  /*\n    Accepts: void\n    Returns: copy of movies\n  */\n  getMovies() {\n    return JSON.parse(JSON.stringify(this.movies));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: []\n})\nexport class SharedModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}